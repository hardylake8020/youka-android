apply plugin: 'com.android.application'

def AAVersion = '3.2'

android {
    compileSdkVersion 24
    buildToolsVersion '24.0.1'
    defaultConfig {
        applicationId "com.zzqs.app_kc"
        minSdkVersion 14
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
    }

    signingConfigs {
        release {
            storeFile file('zz-zh-release-key.keystore')
            keyAlias 'ydkt'
            keyPassword 'csbz24123'
            storePassword 'csbz24123'
        }
    }
    lintOptions {
        abortOnError false
    }
// java版本
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
    buildTypes {
        release {
            minifyEnabled true
            //shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard.cfg'
            signingConfig signingConfigs.release
            buildConfigField "String", "BASE_URL", "\"http://www.zhuzhu56.com\""
        }
        debug {
            minifyEnabled false
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard.cfg'
            signingConfig signingConfigs.release
//            buildConfigField "String", "BASE_URL", "\"http://192.168.2.226:3002\""
            buildConfigField "String", "BASE_URL", "\"http://www.cvs001.com\""

        }
    }
    productFlavors {
    }
}

android.applicationVariants.all { variant ->
    def buildType = variant.buildType
    def encoding = java.nio.charset.Charset.defaultCharset().toString()
    if (buildType.applicationIdSuffix) {
        def defaultPackageId = variant.packageName.replaceAll(buildType.applicationIdSuffix, '')
        variant.mergeResources.doLast {
            def dir = file("${buildDir}/intermediates/res/${variant.dirName}/layout")
            dir.listFiles().each { f ->
                String content = f.getText(encoding)
                content = content.replaceAll("res/" + defaultPackageId, "res/" + variant.packageName)
                f.write(content, encoding)
            }
        }
    }
}


dependencies {
    compile 'com.android.support:support-v4:24.2.1'
    compile 'com.android.support:appcompat-v7:24.0.0'
    compile files('libs/BaiduLBS_Android.jar')
    compile files('libs/GetuiExt-2.0.3.jar')
    compile files('libs/httpmime-4.1.3.jar')
    compile files('libs/nineoldandroids-2.4.0.jar')
    compile files('libs/zxing.jar')
    compile 'com.nostra13.universalimageloader:universal-image-loader:1.9.5'
    compile 'com.loopj.android:android-async-http:1.4.9'
    compile 'de.greenrobot:eventbus:2.4.0'
    compile 'com.squareup.okhttp:okhttp:2.7.2'
    compile files('libs/happy-dns-0.2.7.jar')
    compile files('libs/tncrash.jar')
    compile files('libs/GetuiSDK2.8.1.0.jar')
    compile 'com.tbruyelle.rxpermissions:rxpermissions:0.8.0@aar'
    compile 'io.reactivex:rxandroid:1.2.0'
    compile 'io.reactivex:rxjava:1.1.5'
    compile 'com.squareup.retrofit2:retrofit:2.0.0-beta4'
    compile 'com.squareup.retrofit2:converter-gson:2.0.0-beta4'
    compile 'com.squareup.retrofit2:adapter-rxjava:2.0.0-beta4'
    compile 'com.squareup.okhttp3:logging-interceptor:3.3.1'
    compile 'com.qiniu:qiniu-android-sdk:7.2.+'
    compile 'com.facebook.fresco:fresco:0.14.1'
}
